[
    {
        "index": 1,
        "title": "PyCon CZ 23 - What drives you to contribute to the community?",
        "url": "https://www.youtube.com/watch?v=1lZgRl9pYLM",
        "video_id": "1lZgRl9pYLM",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20230919",
        "duration": 198,
        "view_count": 290,
        "like_count": 12,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Conversations with members of the Python community, filmed during PyCon CZ 23.\n\nProduction crew: Mia Bajić, Moisés Guimarães, Artur Czepiel. \n\nA big thanks to everyone who contributed, including Jan Gondol, Karolina Surma, Jan Pipek, Sena Sahin, Honza Javorek, Laysa Uchoa, Lumír Balhar, Pavlína Froňková and Anton Caceres!",
        "thumbnail": "https://i.ytimg.com/vi/1lZgRl9pYLM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1lZgRl9pYLM",
        "original_url": "https://www.youtube.com/watch?v=1lZgRl9pYLM"
    },
    {
        "index": 2,
        "title": "You Build It You Run It a Panel Discussion with L. Prskavec, V. Wanča, N. Jašíková & K. Minařík",
        "url": "https://www.youtube.com/watch?v=xFn0sARWvHU",
        "video_id": "xFn0sARWvHU",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 2999,
        "view_count": 39,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "“You build it, you run it” is a software development principle emphasizing the development team’s responsibility in designing, building, and maintaining the systems they create. The team should have end-to-end ownership of the systems they develop.\n\nLadislav and Vilibald are hosting Podcast about “You Build It, you Run It”. You can find us under YBYR on all podcast platforms. We will discuss live with our great guests, and you are invited to this discussion, and you can help us with your questions.\n\nOur guests, Nada Jasikova and Karel Minarik, are seasoned veterans with many years of experience, and it will be a great debate.\n\nhttps://cz.pycon.org/2023/program/panels/61/",
        "thumbnail": "https://i.ytimg.com/vi/xFn0sARWvHU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=xFn0sARWvHU",
        "original_url": "https://www.youtube.com/watch?v=xFn0sARWvHU"
    },
    {
        "index": 3,
        "title": "Jan Matějek: Integrating MicroPython and Rust",
        "url": "https://www.youtube.com/watch?v=4uPJ5PDMps4",
        "video_id": "4uPJ5PDMps4",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1673,
        "view_count": 159,
        "like_count": 7,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "What does a Pythonista do when their MicroPython code grows too slow and eats too much RAM? Why, they switch to Rust!\n\nYou’ll find out a little bit about how MicroPython is implemented, how it calls C, and how to understand its internal data structures from Rust.\n\nAnd why we chose MicroPython and Rust for the Trezor T firmware, what pitfalls we had to face and what it brought us.",
        "thumbnail": "https://i.ytimg.com/vi/4uPJ5PDMps4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4uPJ5PDMps4",
        "original_url": "https://www.youtube.com/watch?v=4uPJ5PDMps4"
    },
    {
        "index": 4,
        "title": "Mani Selvaraj: Code Complete, Leader Incomplete: The Imposter Staff Engineer’s Journey to Leadership",
        "url": "https://www.youtube.com/watch?v=7JBLgj6rr2w",
        "video_id": "7JBLgj6rr2w",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1141,
        "view_count": 252,
        "like_count": 12,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "I, an undercover Imposter Syndrome sufferer, masquerade as a Staff Software Engineer amid an army of coding geniuses.\n\nPrepare to embark on an epic saga of my transformation into a Staff Software Engineer, while simultaneously wrestling with my sneaky self-doubt.\n\nIn this talk, I'll tell about my hilarious misadventures and unexpected triumphs in the rollercoaster ride of becoming a staff software engineer and somehow, against all odds, thriving in that role.",
        "thumbnail": "https://i.ytimg.com/vi/7JBLgj6rr2w/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=7JBLgj6rr2w",
        "original_url": "https://www.youtube.com/watch?v=7JBLgj6rr2w"
    },
    {
        "index": 5,
        "title": "Mikuláš Poul: Pytest: The Case for Using Classes",
        "url": "https://www.youtube.com/watch?v=8dlv416kHcs",
        "video_id": "8dlv416kHcs",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1843,
        "view_count": 59,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "There's many reasons why people love pytest – the simple asserts, modular test setup, easy barrier to entry, the plugin ecosystem.\n\nBut at scale, only using function-based tests becomes hard to maintain, and slow to run. At Xelix, our main Django monolith has about ten thousand tests and about four thousand fixtures, so speed and maintainability is of paramount importance.\n\nIn this talk I will present several reasons why we love to use classes to organise our tests, and to share fixtures. Using class based tests allows you to be more explicit, in what fixtures are available to a set of tests, and allows sharing fixtures between tests not in the same folder. Using classes enables using fixture scope to greatly speed up your tests, while keeping the fixture namespace clear. And finally, using test classes allows you to do interesting things with inheritance and parametrisation, which would be a pain to do with functions only.",
        "thumbnail": "https://i.ytimg.com/vi/8dlv416kHcs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8dlv416kHcs",
        "original_url": "https://www.youtube.com/watch?v=8dlv416kHcs"
    },
    {
        "index": 6,
        "title": "Jakub Klaučo: Challenges of running Python at Planetary Scale",
        "url": "https://www.youtube.com/watch?v=9L0DrURGrO4",
        "video_id": "9L0DrURGrO4",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1789,
        "view_count": 19,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "At SpaceKnow, our operations revolve around managing and analyzing Petabytes of satellite imagery. Our platform — primarily driven by Python — delivers world-class geospatial analysis using advanced AI algorithms, including object detection and classification. This colossal task brings along certain challenges unique to large-scale implementations.\n\nThis talk will expose and address some of these challenges and provide simple practical examples/hacks that we are employing to keep our sanity.\n\nThe solutions to following challenges will be explored:\n\nLogging: How to smartly utilize Python's logging capabilities to maintain context and traceability of logs in a cloud-based distributed system.\nVersioning: Managing pip and system packages for python running in docker can be tricky, especially when services demand predictable output. I will shed light on the problems faced and the tricks used to effectively manage versioning in our platform.\nParallelism: Large-scale operations require robust tasking mechanisms. We'll explore how we use Redis to enable parallel Python microservices to run reliable tasking in a distributed system.\nResource Scaling: Resource scaling is critical for managing load in our applications. We will discuss how we automate the scaling of Kubernetes pods based on queue size using Python microservices.",
        "thumbnail": "https://i.ytimg.com/vi/9L0DrURGrO4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=9L0DrURGrO4",
        "original_url": "https://www.youtube.com/watch?v=9L0DrURGrO4"
    },
    {
        "index": 7,
        "title": "Mauro Pelucchi: Greening the Labour Market: Using NLP to Identify in‑demand Green Skills",
        "url": "https://www.youtube.com/watch?v=BACMOFIeEQM",
        "video_id": "BACMOFIeEQM",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1761,
        "view_count": 16,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "The talk will explore the concept of “green skills” and “green jobs”, which are skills and occupations that contribute to preserving or restoring the natural environment.\n\nThe focus will be on using natural language processing (NLP) techniques to create an index of greenness of different types of work, in order to better understand and quantify the environmental impact of different industries and occupations. The talk will also discuss the potential benefits of investing in green skills and jobs, such as reducing carbon emissions, improving air and water quality, and conserving natural resources.\n\nAdditionally, the talk will explore the challenges and opportunities of using NLP to create the index as well as the limitations of using text-based data to measure environmental impact.",
        "thumbnail": "https://i.ytimg.com/vi/BACMOFIeEQM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BACMOFIeEQM",
        "original_url": "https://www.youtube.com/watch?v=BACMOFIeEQM"
    },
    {
        "index": 8,
        "title": "Matěj Račinský: How to actually serve your ML models",
        "url": "https://www.youtube.com/watch?v=Bj57ZTQvD-w",
        "video_id": "Bj57ZTQvD-w",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1693,
        "view_count": 22,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "At GenDigital and Avast, we are using machine learning in production. Serving the models well so it's fast and reliable, is non-trivial. There are many tools for serving and it's hard to choose the right one.\n\nI'll be sharing my experience with serving Tensorflow model with custom C++ code where we tried TF Serving, Triton and TorchServe, and serving Huggingface Transformers in Vertex AI using gunicorn and FastAPI on both CPU and GPU and how I was benchmarking and debugging it.\n\nI'll also briefly talk about our experience with serving ML Models in Julia.\n\nCode samples and presentation can be found here: https://github.com/racinmat/pycon_cz_2023_serving_models",
        "thumbnail": "https://i.ytimg.com/vi/Bj57ZTQvD-w/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Bj57ZTQvD-w",
        "original_url": "https://www.youtube.com/watch?v=Bj57ZTQvD-w"
    },
    {
        "index": 9,
        "title": "Adam Zíka: Low‑Rank Adaptation (LoRA) in Large Language Models",
        "url": "https://www.youtube.com/watch?v=HcBiSv9WHak",
        "video_id": "HcBiSv9WHak",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1395,
        "view_count": 164,
        "like_count": 4,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In this presentation, we will explore the fascinating realm of Low-Rank Adaptation (LoRA) technique in the context of large language models.\n\nAs the demand for efficient and versatile language models continues to surge, understanding how to optimize their performance becomes paramount.\n\nLeveraging low-rank adaptations offer a promising avenue to achieve both efficiency and generalization, enabling language models to excel across diverse domains and contexts.",
        "thumbnail": "https://i.ytimg.com/vi/HcBiSv9WHak/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HcBiSv9WHak",
        "original_url": "https://www.youtube.com/watch?v=HcBiSv9WHak"
    },
    {
        "index": 10,
        "title": "Pratibha Jagnere: Itertools – iterators for efficient looping",
        "url": "https://www.youtube.com/watch?v=Jcl4grE9M8o",
        "video_id": "Jcl4grE9M8o",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1514,
        "view_count": 16,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "The itertools module is a standard library module in Python that provides a number of functions and classes for working with iterators. It can be helpful in day-to-day work by providing a number of common tasks that can be performed with iterators, such as:\n\nCreating iterators from lists, strings, and other iterables\nCombining iterators into new iterators\nFiltering iterators\nSorting iterators\nMapping functions over iterators\nReducing iterators to a single value\nThe itertools module can also be used to create custom iterators, which can be useful for performing tasks that are not easily performed with standard iterators.",
        "thumbnail": "https://i.ytimg.com/vi/Jcl4grE9M8o/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Jcl4grE9M8o",
        "original_url": "https://www.youtube.com/watch?v=Jcl4grE9M8o"
    },
    {
        "index": 11,
        "title": "Markus Ziller: Optimize your Python functions in AWS Lambda for speed and cost‑efficiency",
        "url": "https://www.youtube.com/watch?v=MA_h_OAuUmI",
        "video_id": "MA_h_OAuUmI",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1835,
        "view_count": 146,
        "like_count": 5,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "This presentation explores optimizing AWS Lambda functions written in Python for speed and cost‑efficiency.\n\nWe examine the fundamentals of AWS Lambda and how Python functions operate in a serverless environment. Key factors impacting performance and cost, such as memory allocation and execution time, are discussed.\n\nTechniques for improving speed include leveraging concurrency, optimizing memory settings, and using asynchronous programming patterns.\n\nCost-efficiency strategies involve selecting appropriate memory configurations, managing resource utilization, and designing efficient code.\n\nThe presentation provides practical examples and real-world experiences to demonstrate the benefits of each optimization technique. By the end, attendees will gain a comprehensive understanding of fine-tuning Python AWS Lambda functions to achieve optimal performance while minimizing costs in serverless applications.",
        "thumbnail": "https://i.ytimg.com/vi/MA_h_OAuUmI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MA_h_OAuUmI",
        "original_url": "https://www.youtube.com/watch?v=MA_h_OAuUmI"
    },
    {
        "index": 12,
        "title": "Týna Doležalová & Lubomír Doležal: Getting started with Satellite Data: Exploration and Processing",
        "url": "https://www.youtube.com/watch?v=OTEFyC7L4hQ",
        "video_id": "OTEFyC7L4hQ",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1640,
        "view_count": 21,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Satellite data has become a valuable resource for addressing various contemporary challenges, ranging from environmental monitoring to urban planning and disaster management. But just looking at single satellite products as they are is not always enough to identify the patterns you search for. We need tools to effectively manipulate vast data to bring forward the details. Satellite data are not all the same – we have optical imagery, radar data, elevation models or satellite measurements of the characteristic of the atmosphere.\n\nThis talk should give you an introduction to GeoPython (Python geospatial libraries) and more specifically to using and manipulating satellite data with code. I will introduce you to common libraries and practices like GDAL, Rasterio or QGIS - very known, Open Source helpers.\n\nThis talk should also introduce where to search for such data and how to filter, view and download them as even obtaining only what you are interested in presents itself to be a challenge. We will also mention simple indexes which are usually computed from satellite images to highlight a certain phenomenon or help to identify certain patterns observed on a combination of satellite data bands or products. Such indexes are used for example to detect urban settlements or vegetation.",
        "thumbnail": "https://i.ytimg.com/vi/OTEFyC7L4hQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=OTEFyC7L4hQ",
        "original_url": "https://www.youtube.com/watch?v=OTEFyC7L4hQ"
    },
    {
        "index": 13,
        "title": "Filip Sedlák: API Stability: Don’t Break Your Users!",
        "url": "https://www.youtube.com/watch?v=QnGkZTr25S8",
        "video_id": "QnGkZTr25S8",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1779,
        "view_count": 14,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Have you ever feared to upgrade a tool or a library you depend on? Did you know that there are many Windows programs that can run unchanged straight from the 90s? Why can't the opensource project you're using keep an API for two years?\n\nWhat is the magical sauce for API compatibility and why some companies can do it and some tools just break your code on every upgrade? I'll show you examples from several open-source projects - some positive, some frustrating.\n\nIn the end, we'll go through strategies you may use to keep your APIs compatible as your product evolves.",
        "thumbnail": "https://i.ytimg.com/vi/QnGkZTr25S8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=QnGkZTr25S8",
        "original_url": "https://www.youtube.com/watch?v=QnGkZTr25S8"
    },
    {
        "index": 14,
        "title": "Eliška Čejpová & Daryl Seager: How to give great feedback",
        "url": "https://www.youtube.com/watch?v=RRC8Sf8r5O0",
        "video_id": "RRC8Sf8r5O0",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1883,
        "view_count": 17,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Feedback is integral to personal and professional growth. However, current feedback practices often fall short, resulting in missed opportunities and poor relationships.\n\n“Negative” feedback can create avoidance and hinder collaboration. Effective feedback promotes growth, self-awareness, and continuous improvement, empowering people to leverage their strengths and address development areas. Improving feedback culture strengthens relationships, fostering open communication, trust, and teamwork.\n\nIn our talk, we’ll address barriers to effective feedback, discuss reframing feedback, and offer practical tips for meaningful and impactful communication.",
        "thumbnail": "https://i.ytimg.com/vi/RRC8Sf8r5O0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=RRC8Sf8r5O0",
        "original_url": "https://www.youtube.com/watch?v=RRC8Sf8r5O0"
    },
    {
        "index": 15,
        "title": "Anastázie Sedláková: DIY precision medicine with Pandas",
        "url": "https://www.youtube.com/watch?v=RpuKhmnvzXM",
        "video_id": "RpuKhmnvzXM",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1882,
        "view_count": 14,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "We live in an era of enormous amounts of data. Precision medicine makes use of that data to choose the right treatment or prevention for an individual. We can use your genetic code to make recommendations even more precise. But first, we need to know which parts of the DNA are associated with which diseases. How would you actually find that from publicly available data?\n\nWith some basic pandas functions, open data and your results from any DNA testing company I will show you how:\n\nGenome-wide association studies (GWAS) are performed\nUnderstand results of GWAS\nUnderstand how GWAS results can be used to generate polygenic risk scores (PRS)\nFilter data and show significant association with your data\nNo prior knowledge of genetics is required, I will explain everything during the talk. Knowledge of the pandas library is recommended.",
        "thumbnail": "https://i.ytimg.com/vi/RpuKhmnvzXM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=RpuKhmnvzXM",
        "original_url": "https://www.youtube.com/watch?v=RpuKhmnvzXM"
    },
    {
        "index": 16,
        "title": "Jürgen Gmach: Behind the Scenes of tox: Rewriting a Tool with more than 10 Million Monthly Downloads",
        "url": "https://www.youtube.com/watch?v=SJDAhpMsd9U",
        "video_id": "SJDAhpMsd9U",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1562,
        "view_count": 24,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Do you recall what developer legend Joel Spolsky called the “single worst strategic mistake” in Things You Should Never Do?\n\nRewriting software from scratch.\n\nThat is what we did. For the tox test automation tool. A tool, downloaded more than 10 million times a month, both heavily used in the open source community, and in multi-billion dollar companies alike.\n\nI invite you to join me on the very personal journey of rewriting tox, a journey, which already started in 2019. We will have a look at the initial motivations for the rewrite, the design decisions, the challenges, and the lessons learned.\n\nWe will reconstruct why it took more than three years, from the idea to the release, and why this was a good thing.\n\nI will explain what we did to take care that the release would cause the least amount of issues, and why we still received dozens and dozens of bug reports about regressions the days after the release.\n\nBut most importantly, you will get to know the maintainers and their motivation.",
        "thumbnail": "https://i.ytimg.com/vi/SJDAhpMsd9U/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SJDAhpMsd9U",
        "original_url": "https://www.youtube.com/watch?v=SJDAhpMsd9U"
    },
    {
        "index": 17,
        "title": "Evelina Gabašová: Transformational Power of Openness: Reflections on Open Science and Open Source",
        "url": "https://www.youtube.com/watch?v=Y3BvG1z6I4E",
        "video_id": "Y3BvG1z6I4E",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 2387,
        "view_count": 46,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Open source has thoroughly transformed the world of tech and software development with its benefits and a unique set of challenges. It has not only revolutionised the technology industry, but also profoundly influenced academic research.\n\nAcademia has had its own drive for openness, influenced by the reproducibility crisis, inspired by open source: the open science movement. In this talk, we will look at some of the principles and approaches in open source and how they are reflected in academic practice.\n\nWe will explore some of the successful examples where academic software projects created impact in the wider ecosystem (focusing on Python) and what can we learn from them, in academia and beyond. We will also look into the systemic challenges that the drive for openness faces and what can we learn from open science.\n\nJoin us for a deep-dive into the dynamic relationship between open source, academia, and open science.",
        "thumbnail": "https://i.ytimg.com/vi/Y3BvG1z6I4E/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Y3BvG1z6I4E",
        "original_url": "https://www.youtube.com/watch?v=Y3BvG1z6I4E"
    },
    {
        "index": 18,
        "title": "Alberto Schiabel: Adaptable query accuracy at scale",
        "url": "https://www.youtube.com/watch?v=ZxzmzILTvbg",
        "video_id": "ZxzmzILTvbg",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 2015,
        "view_count": 5,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Have you ever wondered how social medias keep track of the number of likes and comments under each post? In a distributed world, performing accurate and fast queries on large amounts of data is challenging, as traditional query techniques can become impractical at scale.\n\nThankfully, probabilistic techniques allow us to trade a small amount of accuracy for significant performance gains. Introducing data structures like Bloom filters and Count-Min sketches, we’ll develop an intuition on how they are used for efficient set membership or frequency queries, and will compare their performance with non-probabilistic queries. We will also compare probabilistic data structures coded in Python with real-world alternatives used in databases.\n\nAfter this talk, you will have a better understanding of the internals of popular databases and new tools at your disposal to let your software service grow at scale.",
        "thumbnail": "https://i.ytimg.com/vi/ZxzmzILTvbg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZxzmzILTvbg",
        "original_url": "https://www.youtube.com/watch?v=ZxzmzILTvbg"
    },
    {
        "index": 19,
        "title": "Furkan M. Torun: How to Build an Open‑Source Machine Learning Platform in Biology?",
        "url": "https://www.youtube.com/watch?v=fc7CNZ5DS9Q",
        "video_id": "fc7CNZ5DS9Q",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1719,
        "view_count": 48,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "The global transition to personalized medicine has been accelerated by the advancements in high-throughput technologies in biology and increasing computational power and storage capacities. Accompanying the diversity and growing volume of the complex biological datasets, called “–omics” data (e.g., genomics and proteomics), revolutionized our understanding and our way of interpreting disease and health states, although they generate new challenges.\n\nTo reveal the complex and hidden patterns in omics data, machine learning (ML) showed promising results and brought new opportunities for transforming scientific discovery today. Popular packages such as scikit-learn or XGBoost enable predictive data analysis. However, the researchers still require programming skills to write their own ML pipelines which are not always easy to follow by non-specialists due to lacking domain knowledge and a graphical interface.\n\nFurthermore, several parameters can be changed to tune the algorithms, which might show differences from version to version, resulting in reproducibility issues. To reproduce published results, the same software environment needs to be set up and configured with the matching package versions and algorithm parameters.\n\nAdditionally, omics sciences and ML require special domain knowledge since metrics can be deceiving and algorithms might need extra preselection or preprocessing steps.\n\nThus, transparent and open-source software is highly valuable for open and reproducible science. To address all the issues and to enable researchers to access state-of-the-art ML algorithms without requiring any prior bioinformatics and programming knowledge, we introduce OmicLearn (OmicLearn.org), a ready-to-use, open-source, web-based, ML platform specifically developed for omics datasets.\n\nIn this talk, you will see how to build a machine learning platform from open-source tools and how to apply state-of-the-art algorithms to omics datasets in a standardized format.",
        "thumbnail": "https://i.ytimg.com/vi/fc7CNZ5DS9Q/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fc7CNZ5DS9Q",
        "original_url": "https://www.youtube.com/watch?v=fc7CNZ5DS9Q"
    },
    {
        "index": 20,
        "title": "Sebastian Arias: Pythonic Laziness: Unleashing the Power of Generators",
        "url": "https://www.youtube.com/watch?v=jLMOVo0Qacc",
        "video_id": "jLMOVo0Qacc",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1713,
        "view_count": 21,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Lazy evaluation is a powerful concept in computer science that can be used to optimize the performance of programs by reducing the amount of computation needed to produce results. In Python, one way to implement lazy evaluation is through the use of generators, which are functions that can be paused and resumed during execution to generate a sequence of values on-the-fly.\n\nIn this talk, we will explore the concept of lazy evaluation with generators in Python. We will start with a brief overview of generators and then delve into the principles of lazy evaluation, including how it works and its advantages over eager evaluation. We will also cover practical examples of how generators can be used to implement lazy evaluation in real-world scenarios, such as processing large datasets or generating infinite sequences.\n\nAttendees of this talk will gain a deeper understanding of the concept of lazy evaluation and how it can be implemented using generators in Python. They will learn about the benefits of lazy evaluation, including improved performance and reduced memory usage, and see practical examples of how it can be used to solve common programming problems. This presentation is designed for developers who are interested in optimizing their Python code and want to explore the power of lazy evaluation with generators.",
        "thumbnail": "https://i.ytimg.com/vi/jLMOVo0Qacc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jLMOVo0Qacc",
        "original_url": "https://www.youtube.com/watch?v=jLMOVo0Qacc"
    },
    {
        "index": 21,
        "title": "Karel Minařík: The Library and the Maze",
        "url": "https://www.youtube.com/watch?v=l3mSf0GVhzA",
        "video_id": "l3mSf0GVhzA",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 2302,
        "view_count": 56,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "This talk presents an introduction to fundamental machine learning concepts in the context of semantic search.\n\nGiven the rapid increase of interest in artificial intelligence in the last year, driven by many “generative transformer” technologies, it’s often hard to understand the foundational principles behind these advanced systems, especially for people not familiar with the mathematical theory.\n\nWe’ll use Ferdinand de Saussure’s theory of language as a starting point to gain a better understanding of these fundamental concepts, such as word embeddings, vectors, semantic similarity or multi-modal search, demystifying their “magic” without using complicated jargon or complex formulas.",
        "thumbnail": "https://i.ytimg.com/vi/l3mSf0GVhzA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=l3mSf0GVhzA",
        "original_url": "https://www.youtube.com/watch?v=l3mSf0GVhzA"
    },
    {
        "index": 22,
        "title": "Łukasz Mach: Dog vs. Micropython",
        "url": "https://www.youtube.com/watch?v=omrpEsF4AV8",
        "video_id": "omrpEsF4AV8",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1768,
        "view_count": 47,
        "like_count": 1,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "How to train a dog using µpython@esp32? How to teach him to behave himself with a few programming tricks? How hard is it and why is rapid prototyping not really rapid?\n\nI’m a software developer and I should think like a developer. When I need to care for my dog, I should think about IT, IoT, ESP32, µPy and other acronyms.\n\nI will tell you about my programming adventures for saving my dog from boredom, how I have tried to make him a good dog when someone pays a visit, and how I tried to solve the problem with his separation anxiety.\n\nI will describe many failures and a few little successes, what I have learned, and what surprised me. Eg: that hardware is way harder to grasp than software, that 3d-print rapid prototyping is not so rapid. You can find ready components for everything, except the thing you’re looking for.\n\nAnd that perfect is the enemy of good – in other words: MVP approach.",
        "thumbnail": "https://i.ytimg.com/vi/omrpEsF4AV8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=omrpEsF4AV8",
        "original_url": "https://www.youtube.com/watch?v=omrpEsF4AV8"
    },
    {
        "index": 23,
        "title": "Domitil Katemo: Python in the Namibian desert",
        "url": "https://www.youtube.com/watch?v=r_sR8TnoRdE",
        "video_id": "r_sR8TnoRdE",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1744,
        "view_count": 84,
        "like_count": 12,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "After hearing the talks of Czech visitors to PyCon Namibia, I thought I can return the favour and give a short speech about Namibia and PyCon there.\n\nNot much is known about the African, specifically Namibian way of doing things. So I offer a presentation that will help future visitors to find their way to my country through learning of Python.\n\n1. The country of Namibia, where the hell is it and the surprising connection to the Czech Republic.\n2. Culture shock, be prepared!\n3. PyCon Namibia: it's more different than you think\n4. Problems of spreading Python and state of education in general\n5. What can you do to help and feel good about it",
        "thumbnail": "https://i.ytimg.com/vi/r_sR8TnoRdE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=r_sR8TnoRdE",
        "original_url": "https://www.youtube.com/watch?v=r_sR8TnoRdE"
    },
    {
        "index": 24,
        "title": "David Majda: Making Remote Teams Work",
        "url": "https://www.youtube.com/watch?v=uYugrTCN5rc",
        "video_id": "uYugrTCN5rc",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1874,
        "view_count": 16,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Every development team is at least partially remote these days, which presents a unique set of challenges. How do you set up a collaboration workflow? How do you manage communication and maintain team cohesion without seeing each other in person? How do you deal with the lack of social interaction and serendipity? How do you accommodate people with wildly different work and communication styles, emotional needs, and ideas about work-life balance? And what about hiring and onboarding?\n\nHaving led a remote team in a small company for six years, I've experienced these challenges first-hand. In the talk, we’ll go through them (plus a few more), and I’ll describe solutions and guidelines we’ve come up with in our team (including a few that didn’t work). The goal is to provide useful advice you can apply in your work, both as a team leader and as a team member. I would also love to use the talk as an opportunity to start a discussion and learn how others solve similar problems.",
        "thumbnail": "https://i.ytimg.com/vi/uYugrTCN5rc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=uYugrTCN5rc",
        "original_url": "https://www.youtube.com/watch?v=uYugrTCN5rc"
    },
    {
        "index": 25,
        "title": "Álvaro Durán: Codename Tulip: The Making of Async",
        "url": "https://www.youtube.com/watch?v=x_R_uxrLRR8",
        "video_id": "x_R_uxrLRR8",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1621,
        "view_count": 20,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Have you ever ordered something from Starbucks? Like most other businesses, it is primarily interested in maximising the number of orders fulfilled, and that’s why they use asynchronous processing: when you ask for your coffee, the cashier marks a cup with your order and places it into a queue. Queuing orders decouples cashiers and baristas, allowing the cashier to keep taking orders and the deployment of many baristas at peak times. At scale, it would be absurd to see a cashier taking an order and fulfilling it before moving on with the next customer. Yet, we often rely on very similar strategies when we code.\n\nAsynchronous programming has become a huge hit, and there are two main reasons for it. First, it mitigates the problems of systems that make multiple external requests to serve one incoming request (fan-out), making them way faster. And second, it helps save money on infrastructure by using resources better.\n\nHowever, many Python developers, while intrigued, are intimidated by this programming paradigm, and so the goal of this talk is to help figure out how the heck all of this works. In order to do so, what I’m going to do is to review how async was incorporated into Python using the building blocks that all Python developers are already familiar with, such as iterators and generator expressions.\n\nWe will use that foundation to dive into coroutines, the yield from syntax, and finally, async/await. At the end of the talk, we may build a simple web-crawler using what we’ve learnt, and understand the internals of async web services such as Starlette or aiohttp.",
        "thumbnail": "https://i.ytimg.com/vi/x_R_uxrLRR8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=x_R_uxrLRR8",
        "original_url": "https://www.youtube.com/watch?v=x_R_uxrLRR8"
    },
    {
        "index": 26,
        "title": "Lenka Erbenová: Kariérní změna ve 40 letech s pomocí PyLadies",
        "url": "https://www.youtube.com/watch?v=7-USYfHbnlI",
        "video_id": "7-USYfHbnlI",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1418,
        "view_count": 29,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Sdílením vlastního příběhu bych chtěla inspirovat začátečníky na jejich cestě k IT.\n\nDozvíte se, jak mě, personalistku a účetní, vůbec napadlo začít o IT uvažovat, kam směřovaly moje první kroky a kam jsem se během čtyř let dostala.\n\nProč zrovna Python? Kdo a co mi nejvíc pomohlo? Jakou roli v tom sehrála Python komunita? Jaké je být ženou v IT? A jak vidím svoji budoucnost?",
        "thumbnail": "https://i.ytimg.com/vi/7-USYfHbnlI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=7-USYfHbnlI",
        "original_url": "https://www.youtube.com/watch?v=7-USYfHbnlI"
    },
    {
        "index": 27,
        "title": "Nela Slezáková: Prohřešky (juniorních) ajťáků proti psychickému zdraví",
        "url": "https://www.youtube.com/watch?v=FuHr7a6M980",
        "video_id": "FuHr7a6M980",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1125,
        "view_count": 64,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Odlehčenou formou se s vámi podělím o to, které jsou ty největší poklesky proti psychické pohodě, kterých se můžete dopouštět na cestě do IT a v začátcích IT kariéry. A pokud byste si v těchto poklescích už rádi přestali holdovat, zkusím vám naznačit alternativní směr.\n\nMluvit budu trochu o tom, co jsem odpozorovala za ty roky na juniorech, ale nejvíc o tom, co jsem sama prožila. Aneb psychologické poklesky jedné psycholožky, co se rozhodla stát se i programátorkou.\n\nNa přednášce byste měli zjistit, že v tom nejste sami. A že zažívat nepohodu zejména v začátcích v IT je běžné a dá se s tím i něco dělat.",
        "thumbnail": "https://i.ytimg.com/vi/FuHr7a6M980/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=FuHr7a6M980",
        "original_url": "https://www.youtube.com/watch?v=FuHr7a6M980"
    },
    {
        "index": 28,
        "title": "Zuzana Pechová: Základy cybersecurity pro vývojáře",
        "url": "https://www.youtube.com/watch?v=IqYhocwZMzI",
        "video_id": "IqYhocwZMzI",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1884,
        "view_count": 110,
        "like_count": 3,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "I jako začátečníci jste určitě slyšeli o cybersecurity (kybernetické bezpečnosti), a znáte nějaké zásady bezpečného chování na sítích. Jako čerství vývojáři už chráníte nejenom sebe, ale i svůj kód.\n\nV této přednášce se dozvíte přehled potenciálních nebezpečí a jak se proti nim bránit. Podíváme se na to, jak vámi napsaný software bezpečně ukládat, distribuovat, spouštět, a hlavně jak zajistit, aby to, co naprogramujete, nemělo zbytečné zranitelnosti.\n\nNepůjdeme moc do hloubky, ale dostanete odrazový můstek pro další studium, a hodně námětů k přemýšlení a zvídavým otázkám 🐱",
        "thumbnail": "https://i.ytimg.com/vi/IqYhocwZMzI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=IqYhocwZMzI",
        "original_url": "https://www.youtube.com/watch?v=IqYhocwZMzI"
    },
    {
        "index": 29,
        "title": "Lumír Balhar: Funkce je taky jenom objekt!",
        "url": "https://www.youtube.com/watch?v=Pak7Gdv_8c0",
        "video_id": "Pak7Gdv_8c0",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1376,
        "view_count": 42,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "V základních kurzech programování Pythonu se lidé nejčastěji seznámí nejdříve s proměnnými pro uchování hodnot a pak s funkcemi pro uchování spustitelného kódu.\n\nHodně se přitom upozorňuje na rozdíly mezi funkcemi a proměnnými a už se tolik neřeší, co mají společného. A mají vůbec něco společného? Co se stane, když zavolám funkcí bez závorek? A co kdybych chtěl předat funkci jako argument nebo vyvořit novou funkci dynamicky za běhu programu? Co jsou to funkce vyššího řádu?\n\nNa tohle všechno se společně podíváme v nenáročné přednášce, která třeba ukáže další možný směr studia Pythonu po začátečnickém kurzu.",
        "thumbnail": "https://i.ytimg.com/vi/Pak7Gdv_8c0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Pak7Gdv_8c0",
        "original_url": "https://www.youtube.com/watch?v=Pak7Gdv_8c0"
    },
    {
        "index": 30,
        "title": "Mýty a stereotypy o IT: diskuze M. Bajić, Š. Melicharové, H. Javorka, L. Tvrdíkové a R. Hrašky",
        "url": "https://www.youtube.com/watch?v=V-DAAuYpysU",
        "video_id": "V-DAAuYpysU",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 3307,
        "view_count": 124,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Panelová diskuze se zkušenými softwarovými inženýry, kteří mají bohaté zkušenosti s prací s juniory, a začátečníky v oblasti IT. Cílem diskuze je podpořit lidi na jejich cestě do IT a v IT, a sdílet cenné informace a rady.\n\nBěhem této diskuze se zaměříme na následující témata:\n\nJaké jsou nejčastější mýty a stereotypy spojené s IT?\nJak se mýty a stereotypy o IT projevují v pracovním prostředí?\nJak můžeme přispět ke změně a překonat předsudky?",
        "thumbnail": "https://i.ytimg.com/vi/V-DAAuYpysU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=V-DAAuYpysU",
        "original_url": "https://www.youtube.com/watch?v=V-DAAuYpysU"
    },
    {
        "index": 31,
        "title": "Petra Číhalová: Flask jako další krok na cestě k první práci v IT",
        "url": "https://www.youtube.com/watch?v=pTRISpShWI8",
        "video_id": "pTRISpShWI8",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1600,
        "view_count": 52,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Začínající programátoři často hledají projekt nebo téma, kterým by se mohli zabývat po ukončení základního kurzu programování Pythonu.\n\nVelmi vhodným kandidátem je webový framework Flask.\n\nVe své přednášce představím tento framework a jeho hlavní výhody a zaměřím se na otázky:\n\nProč může být Flask tím správným nástrojem pro první kroky ve tvorbě webových aplikací?\nCo všechno se naučím během práce s Flaskem?\nJak mi Flask projekt pomůže na cestě k získání první práce v IT?\nCo dalšího by můj Flask projekt mohl obsahovat, abych získal/a bodíky navíc na pracovním pohovoru?",
        "thumbnail": "https://i.ytimg.com/vi/pTRISpShWI8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=pTRISpShWI8",
        "original_url": "https://www.youtube.com/watch?v=pTRISpShWI8"
    },
    {
        "index": 32,
        "title": "Miroslav Brabenec: Tam a zase zpátky aneb cesta HTTP požadavku",
        "url": "https://www.youtube.com/watch?v=gkHKAJjRigE",
        "video_id": "gkHKAJjRigE",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20240812",
        "duration": 1465,
        "view_count": 39,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Fantastický příběh o útrapách, kterým čelí čaroděj, jehož cílem je doručit delete HTTP (HobbiT Transfer Protocol) požadavek do ohně API osudu na URL mount-doom.mordor hostované v EWS (Eye Web Services).\n\nÚvod do problematiky síťového provozu a tajů, jak fungují webové služby. Odhalení toho, co všechno se může dít, mezi CURL příkazem na jedné straně a Flask aplikací na straně druhé.\n\nÚvod do problematiky základů síťování, load balancingu, HA (High Availability) nebo bezpečnosti.",
        "thumbnail": "https://i.ytimg.com/vi_webp/gkHKAJjRigE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gkHKAJjRigE",
        "original_url": "https://www.youtube.com/watch?v=gkHKAJjRigE"
    }
]