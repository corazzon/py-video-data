[
    {
        "index": 1,
        "title": "Flavio Percoco & Nick Lang: Lessons Learned from Working Remote",
        "url": "https://www.youtube.com/watch?v=jeEw5Qrb5eA",
        "video_id": "jeEw5Qrb5eA",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2506,
        "view_count": 595,
        "like_count": 6,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Working Remotely brings a whole new set of challenges. It can be rewarding, challenging, fun and exciting. But it can also be lonely, depressing and frustrating.\n\nWe'll focus on some of the negatives and on how you or your employer can work to combat them so you can sit and enjoy all the good that comes with remote working.\n\nThis talk dives into the lessons learned from an employee of Elastic, one from Red Hat and other companies that have distributed and remote teams.",
        "thumbnail": "https://i.ytimg.com/vi/jeEw5Qrb5eA/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jeEw5Qrb5eA",
        "original_url": "https://www.youtube.com/watch?v=jeEw5Qrb5eA"
    },
    {
        "index": 2,
        "title": "Karen M. Sandler: Cyborgs Unite!",
        "url": "https://www.youtube.com/watch?v=Z5mknpGpLVY",
        "video_id": "Z5mknpGpLVY",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2699,
        "view_count": 160,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "When I discovered at a young age that I had a life threatening heart condition, the last thing I expected was to have to worry about software. Now, with a heart device implanted in my body, I have come to understand not only how vulnerable medical devices are but how we are making critical choices about software that will have huge societal impact.\n\nI will also touch on potential avenues for accountability, transparency, and access to remedies as we hurtle towards an Internet of Things built on proprietary source code that prevents us from knowing exactly how these vital devices work, what data they are collecting and to what ends, what their vulnerabilities might be, and the extent to which their closed, proprietary nature keeps us from developing societal mechanisms and review processes to keep us safe.",
        "thumbnail": "https://i.ytimg.com/vi/Z5mknpGpLVY/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Z5mknpGpLVY",
        "original_url": "https://www.youtube.com/watch?v=Z5mknpGpLVY"
    },
    {
        "index": 3,
        "title": "Van Lindberg: Balloons, Projects, and Python: Building a Sustainable Community",
        "url": "https://www.youtube.com/watch?v=xT9Tgniew6I",
        "video_id": "xT9Tgniew6I",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2462,
        "view_count": 326,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "A lot of people get started in open source by “scratching their own itch” – building something that they want for themselves. But starting the project isn't the hard part: it is keeping it going in a reasonable, sustainable way.\n\nI will be honest: creating and building a sustainable open community is hard. It involves giving up some control. It involves developing and exercising a different set of skills other than those needed for technical mastery. So how do you do it?\n\nI will start out with three stories about successful open communities, and explain how they were able to succeed. Then I will talk a little about why these communities work. It isn’t fairy dust. It isn’t even altruism. It’s economics, psychology, and communication. Finally, I will give some guidelines around how you can build your own sustainable community.",
        "thumbnail": "https://i.ytimg.com/vi/xT9Tgniew6I/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=xT9Tgniew6I",
        "original_url": "https://www.youtube.com/watch?v=xT9Tgniew6I"
    },
    {
        "index": 4,
        "title": "Sam Trojan: Three Ways My Programming Teacher Rocks (and you can too)!",
        "url": "https://www.youtube.com/watch?v=8YyWt6eYtNg",
        "video_id": "8YyWt6eYtNg",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1863,
        "view_count": 553,
        "like_count": 13,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "As I said in my DevFestCZ talk, most of the teenagers I know aren't interested in learning programming. We can probably blame the way programming is being taught. I think this should be changed and my programming teacher is a fantastic example of how to get kids excited about programming.\n\nIn this talk, I'll show you some good things that he does and I'll give you some tips that will help you rock too. I think you'll leave this talk with more ideas about how to teach teenagers programming in an interesting and effective way. This will be an interactive talk with a chance to ask questions and share your experience.",
        "thumbnail": "https://i.ytimg.com/vi/8YyWt6eYtNg/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8YyWt6eYtNg",
        "original_url": "https://www.youtube.com/watch?v=8YyWt6eYtNg"
    },
    {
        "index": 5,
        "title": "Lukáš Hurych: Dark Python: Social engineering and hacking with 70% success rate",
        "url": "https://www.youtube.com/watch?v=sdvyUJrUwps",
        "video_id": "sdvyUJrUwps",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1963,
        "view_count": 898,
        "like_count": 17,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In the course of the last few years I launched a lot of different attacks in our company (60+ teammates) and with some of them, I had a success rate of 70%. From getting people’s Facebook accounts or access to their LastPass accounts to custom written malware.\n\nThe threat that anyone can steal your customer data is a potential killer of any (financial) company. Being suspicious and aware of all potential phishing attacks and other traps is a must.\n\nIn this talk we will look at the practical (dark) examples I have executed and why Python was the best language of choice. From social engineering (sophisticated phishing attacks), custom malware, dropping nasty USB drives on the street to technical/network attacks.\n\nWhen you want to be really successful in doing social engineering you need to prepare the ultimate user experience. You can not make a mistake and you can not overlook little details (that usually happens if you develop your own apps/websites). Those little details make UX in your app/website awesome (if you are on the good side) but can be exploited pretty easily by the dark side.",
        "thumbnail": "https://i.ytimg.com/vi/sdvyUJrUwps/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=sdvyUJrUwps",
        "original_url": "https://www.youtube.com/watch?v=sdvyUJrUwps"
    },
    {
        "index": 6,
        "title": "David Žihala: How Python code is helping us to solve genetic codes",
        "url": "https://www.youtube.com/watch?v=d_SgNk52nBo",
        "video_id": "d_SgNk52nBo",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1833,
        "view_count": 533,
        "like_count": 9,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Genetic code is a set of rules which are telling us how the organisms translate information from mRNA into amino acids, the main parts of all proteins. Majority of organisms use so called standard genetic code.\n\nHowever, a growing list of exceptions described from various organisms revealed an unexpected evolutionary flexibility of this fundamental molecular mechanism. Our lab has recently contributed to this field by discovering three novel genetic code variants.\n\nThe first part of the presentation will provide a brief introduction to the topic of genetic codes and the second part will be dedicated to our new findings in the filed of alternative genetic codes and how Python help us with some of them.",
        "thumbnail": "https://i.ytimg.com/vi/d_SgNk52nBo/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=d_SgNk52nBo",
        "original_url": "https://www.youtube.com/watch?v=d_SgNk52nBo"
    },
    {
        "index": 7,
        "title": "Magda Zawora: Python developer wannabe: How to make a change in your life and get satisfaction",
        "url": "https://www.youtube.com/watch?v=rA5tSLRJdFU",
        "video_id": "rA5tSLRJdFU",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1763,
        "view_count": 413,
        "like_count": 7,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In my presentation I will treat my story as a case study. I’ll speak about my background, motivation, decision-making process, and finding self-confidence and belief that I can reach the goal. Hopefully not in a pompous or coach style, just to share a bit of inspiration and encouragement for people who feel the need to change something in their life. I’ll also provide audience with some pragmatic information – I will briefly recommend sources that I used and consider to be valuable, present pros and cons of programming bootcamps, and other helpful tools and events. I will also speak about how I planned the learning phase and what I managed to do during that period. Finally, I will explain how I organized my study having very limited amount of spare time and I’ll finish with a few thoughts and recommendations for people who think about or just started the process of change.",
        "thumbnail": "https://i.ytimg.com/vi/rA5tSLRJdFU/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rA5tSLRJdFU",
        "original_url": "https://www.youtube.com/watch?v=rA5tSLRJdFU"
    },
    {
        "index": 8,
        "title": "Jirka Vejražka: Portscan all the things! (fast, distributed and effective)",
        "url": "https://www.youtube.com/watch?v=J6GfWn5cxTo",
        "video_id": "J6GfWn5cxTo",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2016,
        "view_count": 101,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "A real world example of a port scanner written in pure Python as no existing tool fit the bill.\n\nQuick introduction to port scanning, example of a distributed Python code running on multiple systems across the globe and bypassing common portscan detection/prevention systems.",
        "thumbnail": "https://i.ytimg.com/vi/J6GfWn5cxTo/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=J6GfWn5cxTo",
        "original_url": "https://www.youtube.com/watch?v=J6GfWn5cxTo"
    },
    {
        "index": 9,
        "title": "Tomáš Ehrlich: GraphQL is the new black",
        "url": "https://www.youtube.com/watch?v=xSogeqdhCGg",
        "video_id": "xSogeqdhCGg",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1543,
        "view_count": 134,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "REST is a standard for writing APIs, but there might be a better way. GraphQL is a query language which makes APIs more flexible and easier to evolve over time. It gives clients the power to ask for exactly what they need which results in optimized bandwidth, server usage but also allows writing declarative UIs.\n\nThe talk will compare GraphQL with REST API to show the differences and advantages as well as real examples.\n\nMinistry of Python warns: This talk might include a bit of JavaScript.",
        "thumbnail": "https://i.ytimg.com/vi/xSogeqdhCGg/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=xSogeqdhCGg",
        "original_url": "https://www.youtube.com/watch?v=xSogeqdhCGg"
    },
    {
        "index": 10,
        "title": "Petr Baudiš: Machine Learning and Keras",
        "url": "https://www.youtube.com/watch?v=LNUzWaukvcc",
        "video_id": "LNUzWaukvcc",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1784,
        "view_count": 242,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "What is needed for machines to automatically teach themselves to make decisions based on examples? Machine Learning is all the rage nowadays and may seem very magical, especially on “unstructured data” like texts, pictures or sounds.\n\nBut what is actually a “neural network” and do you need a PhD to build some? Turns out that machine learning models are far less magical than they seem to be (at least when solving the more common tasks). Even if your program will acquire magic powers in the eyes of your users.\n\nWe will unveil the dark secret of how neural networks actually look inside. And to solve two real problems (related to text and pictures), we will actually build a couple of simple ones in the popular Python framework Keras.",
        "thumbnail": "https://i.ytimg.com/vi/LNUzWaukvcc/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LNUzWaukvcc",
        "original_url": "https://www.youtube.com/watch?v=LNUzWaukvcc"
    },
    {
        "index": 11,
        "title": "Daniel Kuchta: Classifying cancer nodules with deep learning and Python",
        "url": "https://www.youtube.com/watch?v=NzHCYY_CoGc",
        "video_id": "NzHCYY_CoGc",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2131,
        "view_count": 282,
        "like_count": 1,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "CT scan analysis is a tedious and difficult job even for highly-trained radiologists. It takes hours to go through the whole scan and not miss a single spot which could potentially be a malign cancer nodule. It takes years for novice radiologists to learn the craft and even then they tend to misclassify nodules which might later lead to incorrect treatment of the disease.\n\nWhile we can not improve the radiologist’s ability to detect and classify cancer nodules directly, we can leverage the power of machine learning algorithms we have today together with the data from the past and build a medical support decision system to advise the doctors and warn them, if there is a potentially dangerous nodule detected.\n\nWe decided to get our hands dirty and build such a system. After extensive research and understanding of the problem domain we obtained a labeled dataset which would later be used for the training of our models. The next step was to understand the data we have, uncover hidden biases and handling the data from different sources and formats. Afterwards, we build several models using technologies such as genetic algorithms, TensorFlow, Keras and Python and achieved great results. Be sure to come and I’ll tell you more about this amazing journey.",
        "thumbnail": "https://i.ytimg.com/vi/NzHCYY_CoGc/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=NzHCYY_CoGc",
        "original_url": "https://www.youtube.com/watch?v=NzHCYY_CoGc"
    },
    {
        "index": 12,
        "title": "Claus Aichinger: Shipping Containers using Dunder Methods",
        "url": "https://www.youtube.com/watch?v=z9MDfaWep0w",
        "video_id": "z9MDfaWep0w",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2045,
        "view_count": 157,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In this talk, we delve into the world of container-related double underscore (dunder) methods which define an object’s behavior.\n\nWe will discover some of the most important dunder methods along the lines of the following two use cases:\n\nHow to extend a tuple to represent data?\nHow to implement a dict-like container for data handling?\nIn both cases we will try to quickly come up with implementations that not only serve our purpose, but also render easy-to-use containers mimicking already existing ones.",
        "thumbnail": "https://i.ytimg.com/vi/z9MDfaWep0w/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=z9MDfaWep0w",
        "original_url": "https://www.youtube.com/watch?v=z9MDfaWep0w"
    },
    {
        "index": 13,
        "title": "Justin Mayer: Use Multi-Factor Authentica­tion Everywhere Because Passwords Are Terrible",
        "url": "https://www.youtube.com/watch?v=cK-AH10xHYc",
        "video_id": "cK-AH10xHYc",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1982,
        "view_count": 121,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "When we deploy web applications, users entrust their data to us and expect that we will protect it. Meanwhile, recent high-profile breaches have underscored the risks of username+password authentication, which is the default in Django and other Python web frameworks. One of the best ways to mitigate this risk and protect our users’ data is to add multi-factor authentication (MFA) capability to our applications: one-time passwords (TOTP), hardware keys (Yubikeys, U2F, etc.), email-based authentication etc.\n\nYou will learn how to implement U2F key and TOTP-based multi-factor authentication in your own Python-based web applications in just a few minutes.",
        "thumbnail": "https://i.ytimg.com/vi/cK-AH10xHYc/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cK-AH10xHYc",
        "original_url": "https://www.youtube.com/watch?v=cK-AH10xHYc"
    },
    {
        "index": 14,
        "title": "Christian Heimes: SSLError, now what?",
        "url": "https://www.youtube.com/watch?v=fNIPLUVWhC0",
        "video_id": "fNIPLUVWhC0",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2168,
        "view_count": 100,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "TLS/SSL is the most important and widely-used protocol for secure and encrypted communication, e.g. HTTPS. It offers more than just encryption. TLS also ensures data integrity and strong authentication with X.509 certificates. But it provides merely a false sense of security if you use it wrong.\n\nHave you ever encountered SSLError while connecting to a server, but you didn’t understand what is going on? Are you running production code without TLS/SSL protection or with certificate validation disabled, because you couldn’t figure out how to make it work correctly?\n\nI’ll give you the rundown of the basic cryptographic building blocks, protocol handshake, inner structure of certificates, and PKI. You’ll learn about the best practices, debugging tools and tips how to diagnose TLS/SSL and how to deal with certificates.",
        "thumbnail": "https://i.ytimg.com/vi/fNIPLUVWhC0/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fNIPLUVWhC0",
        "original_url": "https://www.youtube.com/watch?v=fNIPLUVWhC0"
    },
    {
        "index": 15,
        "title": "Míla Votradovec: Security of your application is just a few clicks away",
        "url": "https://www.youtube.com/watch?v=03FODN78s38",
        "video_id": "03FODN78s38",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1886,
        "view_count": 89,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Every time you type pip install -r requirements.txt, you are putting your web application and user data at risk. Modern web applications are using dozens of 3rd party components, that are totally out of your control. You’ve already learned you should test your code, but I’ll do my best to convince you that you should test external code for the security vulnerabilities too.\n\nIn January, two biggest vulnerabilities, Meltdown and Spectre, were publicly disclosed. Those are the most known ones, but smaller vulnerabilities are published nearly every day. And all of them can be exploited and used to abuse your application. The attacker might try to take your application out, steal your user’s data or take advantage of your computer power.\n\nSince vulnerabilities are disclosed, they can be also mitigated. There are multiple vendors dealing with security testing and I’ll focus on the solutions for PyPI package scans. During the talk, I’ll show you how a vulnerability can be exploited, where and how it is reported (you’ll learn what the CVE is) and how you can secure your application using “GitHub’s security alerts for vulnerable dependencies” and Snyk.io on various levels (repository integration, CI server, CLI integration).",
        "thumbnail": "https://i.ytimg.com/vi/03FODN78s38/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=03FODN78s38",
        "original_url": "https://www.youtube.com/watch?v=03FODN78s38"
    },
    {
        "index": 16,
        "title": "Petr Viktorin: Bytecodes and stacks: A look at CPython’s compiler and its execution model",
        "url": "https://www.youtube.com/watch?v=rOU-W_J-zFE",
        "video_id": "rOU-W_J-zFE",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2094,
        "view_count": 204,
        "like_count": 1,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "So, you wrote some Python code. What needs to happen before it starts running? And once it's running, how does Python keep track of what it's doing?\n\nI'll talk about CPython's tokenization, parsing, bytecode and its serialization and cache, the stack-based virtual machine, line number tables, and code, frame and function objects.\n\nDon't worry if you've never heard of these concepts. While even experts should learn something new, the talk is aimed at anyone who's worked on a Python project or two.",
        "thumbnail": "https://i.ytimg.com/vi/rOU-W_J-zFE/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rOU-W_J-zFE",
        "original_url": "https://www.youtube.com/watch?v=rOU-W_J-zFE"
    },
    {
        "index": 17,
        "title": "Clément Verna: How does the Fedora Infra­struc­ture use Python",
        "url": "https://www.youtube.com/watch?v=11MzIGhoJ68",
        "video_id": "11MzIGhoJ68",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2047,
        "view_count": 191,
        "like_count": 5,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "The Fedora Project relies on Python for its Infrastructure, almost all applications helping Fedora to be a successful Open Source Project are developed using Python.\n\nThis talk will present the applications developed and maintained in Fedora and how they are deployed. The following topics will be developed:\n\nWhich applications for which problem\nWhich technologies (Web Framework, Message Bus, etc)\nPython 2 vs Python 3 and migration Plan\nDeployment (Ansible, Openshift)\nMaintenance\nYou will also get all the information needed to start contributing to these applications and to join the Fedora Infrastructure team.",
        "thumbnail": "https://i.ytimg.com/vi/11MzIGhoJ68/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=11MzIGhoJ68",
        "original_url": "https://www.youtube.com/watch?v=11MzIGhoJ68"
    },
    {
        "index": 18,
        "title": "Robert Kuska: Bits and bytes of Python memory management",
        "url": "https://www.youtube.com/watch?v=ALDUKcg6W9o",
        "video_id": "ALDUKcg6W9o",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2081,
        "view_count": 1090,
        "like_count": 21,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Is it true that Python is not returning memory back to OS? What happens with variables which are no longer needed? How important is a garbage collector? How to trace and profile memory usage?\n\nLet's find out answers to these and maybe some more questions.\n\nTalk overview:\n\nIntroduction: Why do I need to care about memory management in Python? Objects in Python – what are they?\nMemory management: How memory is being allocated at start/while running – blocks/pools/arenas? How is memory being freed – reference counting/garbage collector? Extras - small integer’s identity, sys.intern, sys.getsizeof, lists/dicts dynamic allocations. How to find cycles in variables referencing?\nTools for memory management: Overview of available tools for managing memory. How and why Instagram disabled/re-enabled garbage collector?",
        "thumbnail": "https://i.ytimg.com/vi/ALDUKcg6W9o/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ALDUKcg6W9o",
        "original_url": "https://www.youtube.com/watch?v=ALDUKcg6W9o"
    },
    {
        "index": 19,
        "title": "Ryan Kirkbride: Programming Music for Performance: Live coding with FoxDot",
        "url": "https://www.youtube.com/watch?v=XRNFBZlBeuI",
        "video_id": "XRNFBZlBeuI",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2124,
        "view_count": 6789,
        "like_count": 231,
        "comment_count": 8,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In this talk, I will introduce the topic of live coding – the interactive programming experience for generating sound and visuals but this talk will mainly focus on the audio side.\n\nLive coders use programming languages to describe rules for generating music but then re-write these rules while the program is running. By continually writing and re-writing these rules live coders creating a shifting musical experience that is always in flux. All of this happens live in front of an audience with the code projected for all to see.\n\nI will go on to discuss a few of the many tools that are available for live coding and showcase the FoxDot environment, which allows you to live code music using Python. I will talk about the motivation for developing FoxDot and describe some of its key features as well as how you can set it up yourself at home.\n\nThe talk will be concluded with a short demonstration that will be a partial explanation and partial performance.",
        "thumbnail": "https://i.ytimg.com/vi/XRNFBZlBeuI/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XRNFBZlBeuI",
        "original_url": "https://www.youtube.com/watch?v=XRNFBZlBeuI"
    },
    {
        "index": 21,
        "title": "Ann Barcomb: Casual contribu­tors: who, why, and how",
        "url": "https://www.youtube.com/watch?v=N9BWz420PeQ",
        "video_id": "N9BWz420PeQ",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1963,
        "view_count": 224,
        "like_count": 5,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Increasingly, people want to contribute to projects casually. A number of factors have driven this change, such as distributed revision control, social coding platforms, and the general trend towards “new volunteerism.” To take advantage of these contributions, communities need to adapt to the needs and expectations of casual contributors. Yet at the same time, no community wants to invest more effort in inviting casual contributions than it receives in return.\n\nThis talk will cover the benefits of incorporating casual participants, the factors that influence their return and practices for engaging them. The material is based on the body of scientific research, my own research and my personal experience both as a community manager for a non-profit and as an open source contributor.",
        "thumbnail": "https://i.ytimg.com/vi/N9BWz420PeQ/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=N9BWz420PeQ",
        "original_url": "https://www.youtube.com/watch?v=N9BWz420PeQ"
    },
    {
        "index": 22,
        "title": "Tanya Tereshchenko: Host Your Own PyPI & Create Reproducible Environments using Pulp",
        "url": "https://www.youtube.com/watch?v=Rpb5zT5UZ-4",
        "video_id": "Rpb5zT5UZ-4",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1563,
        "view_count": 689,
        "like_count": 10,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Even though software changes constantly under our feet, sometimes we want to keep an old version of a package or organize the packages we want to distribute in a certain way. Reproducible results require reproducible environments so it is important to take matters into your hands.\n\nPulp enables large and small organizations to fetch, upload, organize and distribute software packages in a consistent manner.\n\nIn this session, we will focus on how to manage Python packages with Pulp. We will go over use cases like:\n\nmirroring PyPI content\nmanaging a carefully curated set of packages\npromoting packages through your software development lifecycle\npublish immutable snapshots, and rollback when things go wrong.\nStop by and share your use cases and experiences after the talk.",
        "thumbnail": "https://i.ytimg.com/vi/Rpb5zT5UZ-4/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Rpb5zT5UZ-4",
        "original_url": "https://www.youtube.com/watch?v=Rpb5zT5UZ-4"
    },
    {
        "index": 23,
        "title": "Stan Prokop: How NOT to test software",
        "url": "https://www.youtube.com/watch?v=hYC7QUONnyo",
        "video_id": "hYC7QUONnyo",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2219,
        "view_count": 124,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In 1946, Grace Hopper found a bug trapped in a relay and coined the term bug. Except the term “bug” for an error was actually used before, for example in 1878 Thomas Edison in his letter to Theodore Puskas. Moreover, it wasn’t a true bug, it was a moth. And it wasn’t even Hopper who found the moth. Plenty of bugs in the bug’s story.\n\nSoftware testing is full of myths, mythical silver bullets and “good” and bad practices. In this talk, I’ll debunk myths, share bad practices and explain how good practices can turn out to be not so good when applied in the real world of software engineering. All with focus on our beloved Python.\n\nExamples are unit tests tightly coupled to implementation details, always unstable integration tests and targeting 100 % code coverage.",
        "thumbnail": "https://i.ytimg.com/vi/hYC7QUONnyo/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hYC7QUONnyo",
        "original_url": "https://www.youtube.com/watch?v=hYC7QUONnyo"
    },
    {
        "index": 24,
        "title": "Małgorzata Niewiem: GeoPython – how to save the world using Python",
        "url": "https://www.youtube.com/watch?v=lgOzYDCml3c",
        "video_id": "lgOzYDCml3c",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1304,
        "view_count": 288,
        "like_count": 3,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Remote sensing offers an increasingly wide array of imagery with comprehensive and consistent coverage of the earth's surface.This field grows every day as more satellites are launched and availability of data increases. Satellite images acquire at frequent intervals with a number of details has been used to monitor changes on the Earth. That monitoring can not only help us to see the beautiful world without leaving home but also see processes that occur on the earth to predict disaster situations.\n\nIn this talk, I am going to explore remote sensing and how it can be connected to Python. I will show how using GDAL, NumPy and OpenCV libraries to process satellite data to create full-scale information products. I will introduce some important algorithms used to change detection.\n\nThis talk is intended for Python developers who want to see how space technology answer critical questions for better decisions.",
        "thumbnail": "https://i.ytimg.com/vi/lgOzYDCml3c/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=lgOzYDCml3c",
        "original_url": "https://www.youtube.com/watch?v=lgOzYDCml3c"
    },
    {
        "index": 25,
        "title": "Lukáš Kokoška: How to handle linear HbbTV broadcast with Python for 10 TV stations",
        "url": "https://www.youtube.com/watch?v=GTZ-aCOOgEY",
        "video_id": "GTZ-aCOOgEY",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1063,
        "view_count": 138,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "DVB broadcast is linear, HTTP is not. HbbTV is a standard binding world of linear broadcast and stateless HTTP together.\n\nThere are many challenges to correctly handle web content in TVs, especially with a completely different approach from broadcasters.\n\nI will show you, how to serve advertisements and measure traffic to hundreds of thousands always connected devices on the single server. With just 40% of devices capable of WebSocket, you have to find ways to get performance elsewhere. Ad targeting and caping in shared memory for linear subscribers on 10+ years old devices with Python and uWSGI.",
        "thumbnail": "https://i.ytimg.com/vi/GTZ-aCOOgEY/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GTZ-aCOOgEY",
        "original_url": "https://www.youtube.com/watch?v=GTZ-aCOOgEY"
    },
    {
        "index": 26,
        "title": "Ondřej Kokeš: DataFrames: scaling up and out",
        "url": "https://www.youtube.com/watch?v=aJsdeIcU9HE",
        "video_id": "aJsdeIcU9HE",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1880,
        "view_count": 82,
        "like_count": 4,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "DataFrames have become ubiquitous when it comes to fast analyses of complex data. They go beyond SQL by not adhering to a strict schema and offer a rich API, where you chain methods, which fosters exploratory analytics.\n\nWhile newcomers to Python usually learn about pandas early on, they sometimes struggle as their underlying data grow in size. Given the in-memory nature of pandas' storage system, one can usually only scale up.\n\nI'd like to outline several workflows for adapting to the ever-increasing size of datasets:\n\nChanging application logic to handle streams rather than loading the whole dataset into memory.\nActually scaling up – locally by buying more memory and/or faster disk drives, or by deploying servers in the cloud and SSH tunneling to remote Jupyter instances.\nScaling your data source and utilizing pandas' SQL connector. This will help in other areas as well (e.g. direct connections in BI).\nUsing a distributed DataFrame engine – Dask or PySpark. These scale from laptops to large clusters, using the very same API the whole way through.\nI will cover the various differences between these approaches and will outline their set of upsides (e.g. scaling and performance) and downsides (DevOps difficulties, cost).",
        "thumbnail": "https://i.ytimg.com/vi/aJsdeIcU9HE/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=aJsdeIcU9HE",
        "original_url": "https://www.youtube.com/watch?v=aJsdeIcU9HE"
    },
    {
        "index": 27,
        "title": "Iva Javorková & Martin Javorek: PROČ a JAK učit děti programovat",
        "url": "https://www.youtube.com/watch?v=WHwD8AgpQG8",
        "video_id": "WHwD8AgpQG8",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1998,
        "view_count": 1148,
        "like_count": 19,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "Rádi bychom vám krátce nastínili proč a jak učit děti programovat.\n\nProč bychom měli děti učit programovat i přesto, že ze všech nechceme mít programátory? Proč a jak se dnes učí programovat děti v jiných zemích Evropy a světa? Jak je na tom ČR a co se chystá.\n\nJak začít. Jak rozjet svůj vlastní kroužek, i když třeba škola nemá počítačovou učebnu. Jak uspořádat jednorázovou programovací akci pro děti a rodiče. Jak rozvíjet informatické myšlení už u předškolních dětí, v čem, co a jak mohou programovat děti ze základní školy. Slasti a strasti lektorování kroužku programování pro děti.",
        "thumbnail": "https://i.ytimg.com/vi/WHwD8AgpQG8/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WHwD8AgpQG8",
        "original_url": "https://www.youtube.com/watch?v=WHwD8AgpQG8"
    },
    {
        "index": 28,
        "title": "Rae Knowler: Hypothesis: Property­-based testing for Python",
        "url": "https://www.youtube.com/watch?v=SGicCC6OXgI",
        "video_id": "SGicCC6OXgI",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1865,
        "view_count": 507,
        "like_count": 6,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "We all know we should be writing tests, but coming up with tests for every edge case is hard work and you will inevitably miss some. Tell Hypothesis what kind of data your tests need and let it explore that space. When it finds a bug, it finds the simplest case where your code fails.\n\nIn this talk, I'll show you how to use Hypothesis in your projects to find more bugs than you would imagine.",
        "thumbnail": "https://i.ytimg.com/vi/SGicCC6OXgI/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SGicCC6OXgI",
        "original_url": "https://www.youtube.com/watch?v=SGicCC6OXgI"
    },
    {
        "index": 29,
        "title": "Igor Davydenko: Is asyncio stack ready for web development?",
        "url": "https://www.youtube.com/watch?v=FkoQJrGOUZg",
        "video_id": "FkoQJrGOUZg",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1858,
        "view_count": 373,
        "like_count": 9,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "If you're developing web applications with Python you might have heard about asyncio stack (Python 3, asyncio, aiohttp, uvloop, etc.). It allows developers to create websites without using Django, Flask or other synchronous web frameworks.\n\nLet's talk about why asyncio stack became popular for web development among Pythonistas, especially in Eastern Europe (Ukraine, Russia, etc). I will tell you about projects that are using it and how they compare to more traditional ones.\n\nI will also talk about lessons learned from developing, testing and deploying application used to sign legal documents online in Ukraine: aiohttp.",
        "thumbnail": "https://i.ytimg.com/vi/FkoQJrGOUZg/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=FkoQJrGOUZg",
        "original_url": "https://www.youtube.com/watch?v=FkoQJrGOUZg"
    },
    {
        "index": 30,
        "title": "Matěj Cepl: Wounded hero revived: Lessons learned from porting M2Crypto to Python 3",
        "url": "https://www.youtube.com/watch?v=znF2wVjdb0k",
        "video_id": "znF2wVjdb0k",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1621,
        "view_count": 141,
        "like_count": 2,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "The purpose of this talk is to remind people about M2Crypto. After many years of very light almost non-maintenance only by the brave RHEL maintainer, I have taken over M2Crypto to port it to Py3k and hoped to be done in a month the most. Now, two years later, the merge finally happened and M2Crypto has another chance to survive in the world where Py3k compatibility is a necessity.\n\nThis presentation is about the experience of porting large project combining Python and C from 2.5 to Py3k compliance. I would like to describe the biggest problems and tools which helped me. The formers were (aside from plenty of lingering bugs) complete mess of using 'bytes' and 'str' in Py2k code. What helped a lot were PEP-484 annotations (working in Py2k in the comment form), compatibility macros which are actually present in Python since 2.6.",
        "thumbnail": "https://i.ytimg.com/vi/znF2wVjdb0k/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=znF2wVjdb0k",
        "original_url": "https://www.youtube.com/watch?v=znF2wVjdb0k"
    },
    {
        "index": 31,
        "title": "Stefan Behnel: Cython to the Rescue",
        "url": "https://www.youtube.com/watch?v=dv_ScYgh8os",
        "video_id": "dv_ScYgh8os",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1874,
        "view_count": 393,
        "like_count": 4,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "You just found that C library which solves that huge problem you have. It solves it completely, it's so fast, it's old, rock solid and well tested – and difficult to use, because it has that real-world, well aged C-API. Maybe even C++. So, you want to use it from Python, but there's no wrapper yet? Or worse, the existing wrapper is auto-generated and feels clumsy, slow and just as ugly to work with as C?\n\nGive Cython a try! It's the fastest way to make Python talk (to) native code, and a pleasure to work with as a general programming language.",
        "thumbnail": "https://i.ytimg.com/vi/dv_ScYgh8os/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dv_ScYgh8os",
        "original_url": "https://www.youtube.com/watch?v=dv_ScYgh8os"
    },
    {
        "index": 32,
        "title": "Thiago da Silva Alves: Honeybee conservation with Python",
        "url": "https://www.youtube.com/watch?v=zunVyo2-eJs",
        "video_id": "zunVyo2-eJs",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 1341,
        "view_count": 153,
        "like_count": 3,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "In the apidologie research area, there is one task that obliges the researcher to classify and count the contents of each comb cell in each frame. With this task is possible to control the progression of brood, bees, and food reserves. Since each frame can have thousands of cells, in most cases this task is done by a human in an approximate way, making it error-prone. The automation of this process, using image analysis represents an evolution in this field.\n\nThe honey bee is the world’s most important pollinator of food crops. Almost one-third of the food that we consume each day relies on pollination done mainly by bees. So the creation of software that helps the preservation of this species has a direct impact on our lives.\n\nI am going to show you a few challenges we have faced, from creating comb cell detectors using OpenCV and Shapely, to developing models based on Deep Learning to classify the cell's content using the Caffe framework. With these models, we have obtained accuracy above 98% within eight different classes and solved the proposed problem.",
        "thumbnail": "https://i.ytimg.com/vi/zunVyo2-eJs/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zunVyo2-eJs",
        "original_url": "https://www.youtube.com/watch?v=zunVyo2-eJs"
    },
    {
        "index": 33,
        "title": "Lightning Talks - Friday",
        "url": "https://www.youtube.com/watch?v=40h_ENzSYhY",
        "video_id": "40h_ENzSYhY",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2581,
        "view_count": 52,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi/40h_ENzSYhY/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=40h_ENzSYhY",
        "original_url": "https://www.youtube.com/watch?v=40h_ENzSYhY"
    },
    {
        "index": 34,
        "title": "Lightning Talks - Saturday",
        "url": "https://www.youtube.com/watch?v=KAZn2Fhh7f4",
        "video_id": "KAZn2Fhh7f4",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 2003,
        "view_count": 87,
        "like_count": 1,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi/KAZn2Fhh7f4/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=KAZn2Fhh7f4",
        "original_url": "https://www.youtube.com/watch?v=KAZn2Fhh7f4"
    },
    {
        "index": 35,
        "title": "Short Lightning Talks",
        "url": "https://www.youtube.com/watch?v=mo6is-XCcqQ",
        "video_id": "mo6is-XCcqQ",
        "uploader": "PyCon CZ",
        "uploader_id": "@PyConCZ",
        "uploader_url": "https://www.youtube.com/@PyConCZ",
        "upload_date": "20180626",
        "duration": 981,
        "view_count": 60,
        "like_count": 0,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Science & Technology"
        ],
        "description": "",
        "thumbnail": "https://i.ytimg.com/vi/mo6is-XCcqQ/hqdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=mo6is-XCcqQ",
        "original_url": "https://www.youtube.com/watch?v=mo6is-XCcqQ"
    }
]